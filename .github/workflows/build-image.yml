name: Build Raspberry Pi Image
on:
  push:
    tags:
      - 'img-v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag'
        required: false
        default: 'manual-build'

jobs:
  build-image:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Free up disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker system prune -af
          df -h

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static kpartx zip

      - name: Download base Raspberry Pi OS
        run: |
          echo "Downloading Raspberry Pi OS Lite..."
          wget -q --show-progress -O raspios.zip \
            "https://downloads.raspberrypi.org/raspios_lite_arm64/images/raspios_lite_arm64-2024-03-15/2024-03-15-raspios-bookworm-lite-arm64.zip"
          unzip raspios.zip
          mv *.img raspios.img
          ls -lh raspios.img

      - name: Extend image
        run: |
          echo "Extending image size..."
          dd if=/dev/zero bs=1M count=1024 >> raspios.img
          echo ", +" | sudo sfdisk -N 2 raspios.img

      - name: Setup loop device
        run: |
          sudo losetup -fP raspios.img
          LOOP_DEVICE=$(losetup -a | grep raspios.img | cut -d: -f1)
          echo "LOOP_DEVICE=$LOOP_DEVICE" >> $GITHUB_ENV
          echo "Using loop device: $LOOP_DEVICE"

      - name: Resize partition
        run: |
          sudo e2fsck -f ${LOOP_DEVICE}p2 || true
          sudo resize2fs ${LOOP_DEVICE}p2

      - name: Mount partitions
        run: |
          sudo mkdir -p /mnt/{boot,root}
          sudo mount ${LOOP_DEVICE}p1 /mnt/boot
          sudo mount ${LOOP_DEVICE}p2 /mnt/root

      - name: Setup chroot
        run: |
          sudo cp /usr/bin/qemu-aarch64-static /mnt/root/usr/bin/
          sudo mount --bind /dev /mnt/root/dev
          sudo mount --bind /proc /mnt/root/proc
          sudo mount --bind /sys /mnt/root/sys
          
      - name: Install Plant SDK
        run: |
          # Copy our files
          sudo cp -r . /mnt/root/tmp/plant-sdk/
          
          # Run installation in chroot
          sudo chroot /mnt/root /bin/bash -c "
            set -e
            cd /tmp/plant-sdk
            
            # Update system
            apt-get update
            apt-get install -y python3 python3-pip git
            
            # Install our software
            chmod +x enhanced_install.sh
            ./enhanced_install.sh --non-interactive --image-mode || true
            
            # Enable SSH
            systemctl enable ssh
            
            # Set password
            echo 'pi:raspberry' | chpasswd
            
            # Cleanup
            apt-get clean
            rm -rf /tmp/plant-sdk
          "

      - name: Cleanup and create image
        run: |
          # Unmount everything
          sudo umount /mnt/root/dev /mnt/root/proc /mnt/root/sys
          sudo umount /mnt/root /mnt/boot
          sudo losetup -d ${LOOP_DEVICE}
          
          # Rename and compress
          mv raspios.img plant-analysis-sdk-$(date +%Y%m%d).img
          zip -9 plant-analysis-sdk-image.zip plant-analysis-sdk-*.img
          
          # Create checksum
          sha256sum plant-analysis-sdk-*.img > plant-analysis-sdk.sha256

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: plant-analysis-sdk-image
          path: |
            plant-analysis-sdk-image.zip
            plant-analysis-sdk.sha256

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            plant-analysis-sdk-image.zip
            plant-analysis-sdk.sha256
          body: |
            # ðŸŒ± Plant Analysis SDK - Complete Image
            
            **Ready-to-use Raspberry Pi image with Plant Analysis SDK pre-installed!**
            
            ## ðŸš€ Quick Start
            1. Download `plant-analysis-sdk-image.zip`
            2. Extract and flash .img file to SD card (8GB+)
            3. Insert SD card into Raspberry Pi and boot
            4. Access web interface: `http://raspberrypi.local:5000`
            5. SSH access: `ssh pi@raspberrypi.local` (password: raspberry)
            
            ## âœ… Pre-installed Features
            - Plant Analysis SDK
            - Web interface (port 5000)  
            - Jupyter notebook (port 8888)
            - SSH enabled
            - All dependencies included
            
            Flash and go! ðŸš€
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}